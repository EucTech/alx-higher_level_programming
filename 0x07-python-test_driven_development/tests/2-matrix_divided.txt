"""This is a function that checks for the testcases"""

matrix_divided = __import__('2-matrix_divided').matrix_divided

>>> matrix = [
...     [1, 2, 3],
...     [4, 5, 6]
... ]
>>> matrix_divided(matrix, 6)
[[0.17, 0.33, 0.5], [0.67, 0.83, 1.0]]

>>> matrix = [
...     [1, 2, 3],
...     [4, 5, 6]
... ]
>>> matrix_divided(matrix, -6) 
[[-0.17, -0.33, -0.5], [-0.67, -0.83, -1.0]]

>>> matrix = [
...     [1, 2, 3],
...     [4, 5, 6]
... ]
>>> matrix_divided(matrix, 7.9) 
[[0.13, 0.25, 0.38], [0.51, 0.63, 0.76]]

>>> matrix = [
...     [1, 2, 3],
...     [4, 5, 6]
... ]
>>> matrix_divided(matrix)    
Traceback (most recent call last):
  ...
TypeError: matrix_divided() missing 1 required positional argument: 'div'

>>> matrix = [
...     [1, 2, 3],
...     [4, 5, 6]
... ]
>>> matrix_divided(matrix, 0) 
Traceback (most recent call last):
  ...
ZeroDivisionError: division by zero

>>> matrix = [               
...     [1, 2, 3],
...     [4, 5, 6]
... ]
>>> matrix_divided(matrix, 'h') 
Traceback (most recent call last):
  ...
TypeError: div must be a number

>>> matrix = [
...     [1, 2, 3],
...     [4, 5, 6]
... ]
>>> matrix_divided(matrix, 'nan') 
Traceback (most recent call last):
  ...
TypeError: div must be a number

>>> matrix = [
...     [1, 2, 3],
...     [4, 5, 6]
... ]
>>> matrix_divided(matrix, 'inf') 
Traceback (most recent call last):
  ...
TypeError: div must be a number

>>> matrix = [
...     [1, 2],
...     [4, 5, 6]
... ]
>>> matrix_divided(matrix, 4) 
Traceback (most recent call last):
  ...
TypeError: Each row of the matrix must have the same size

>>> matrix = [
...     [1, 2, 3.0],
...     [4, 5, 6]
... ]
>>> matrix_divided(matrix, 6)
[[0.17, 0.33, 0.5], [0.67, 0.83, 1.0]]

>>> matrix = [               
...     [1, 2, 3.0],
...     [4, -5, 6]
... ]
>>> matrix_divided(matrix, -2) 
[[-0.5, -1.0, -1.5], [-2.0, 2.5, -3.0]]
